/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

const metadata = {
    models: {
        user: {
            name: 'User', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, name: {
                    name: "name",
                    type: "String",
                    isOptional: true,
                }, email: {
                    name: "email",
                    type: "String",
                }, emailVerified: {
                    name: "emailVerified",
                    type: "DateTime",
                    isOptional: true,
                }, image: {
                    name: "image",
                    type: "String",
                    isOptional: true,
                }, accounts: {
                    name: "accounts",
                    type: "Account",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user',
                }, sessions: {
                    name: "sessions",
                    type: "Session",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user',
                }, Authenticator: {
                    name: "Authenticator",
                    type: "Authenticator",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user',
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, email: {
                    name: "email",
                    fields: ["email"]
                },
            },
        },
        account: {
            name: 'Account', fields: {
                userId: {
                    name: "userId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'user',
                }, type: {
                    name: "type",
                    type: "String",
                }, provider: {
                    name: "provider",
                    type: "String",
                    isId: true,
                }, providerAccountId: {
                    name: "providerAccountId",
                    type: "String",
                    isId: true,
                }, refresh_token: {
                    name: "refresh_token",
                    type: "String",
                    isOptional: true,
                }, access_token: {
                    name: "access_token",
                    type: "String",
                    isOptional: true,
                }, expires_at: {
                    name: "expires_at",
                    type: "Int",
                    isOptional: true,
                }, token_type: {
                    name: "token_type",
                    type: "String",
                    isOptional: true,
                }, scope: {
                    name: "scope",
                    type: "String",
                    isOptional: true,
                }, id_token: {
                    name: "id_token",
                    type: "String",
                    isOptional: true,
                }, session_state: {
                    name: "session_state",
                    type: "String",
                    isOptional: true,
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    backLink: 'accounts',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "userId" },
                },
            }, uniqueConstraints: {
                provider_providerAccountId: {
                    name: "provider_providerAccountId",
                    fields: ["provider", "providerAccountId"]
                },
            },
        },
        session: {
            name: 'Session', fields: {
                sessionToken: {
                    name: "sessionToken",
                    type: "String",
                    isId: true,
                }, userId: {
                    name: "userId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'user',
                }, expires: {
                    name: "expires",
                    type: "DateTime",
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    backLink: 'sessions',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "userId" },
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                },
            }, uniqueConstraints: {
                sessionToken: {
                    name: "sessionToken",
                    fields: ["sessionToken"]
                },
            },
        },
        verificationToken: {
            name: 'VerificationToken', fields: {
                identifier: {
                    name: "identifier",
                    type: "String",
                    isId: true,
                }, token: {
                    name: "token",
                    type: "String",
                    isId: true,
                }, expires: {
                    name: "expires",
                    type: "DateTime",
                },
            }, uniqueConstraints: {
                identifier_token: {
                    name: "identifier_token",
                    fields: ["identifier", "token"]
                },
            },
        },
        authenticator: {
            name: 'Authenticator', fields: {
                credentialID: {
                    name: "credentialID",
                    type: "String",
                    isId: true,
                }, userId: {
                    name: "userId",
                    type: "String",
                    isId: true,
                    isForeignKey: true,
                    relationField: 'user',
                }, providerAccountId: {
                    name: "providerAccountId",
                    type: "String",
                }, credentialPublicKey: {
                    name: "credentialPublicKey",
                    type: "String",
                }, counter: {
                    name: "counter",
                    type: "Int",
                }, credentialDeviceType: {
                    name: "credentialDeviceType",
                    type: "String",
                }, credentialBackedUp: {
                    name: "credentialBackedUp",
                    type: "Boolean",
                }, transports: {
                    name: "transports",
                    type: "String",
                    isOptional: true,
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    backLink: 'Authenticator',
                    isRelationOwner: true,
                    onDeleteAction: 'Cascade',
                    foreignKeyMapping: { "id": "userId" },
                },
            }, uniqueConstraints: {
                userId_credentialID: {
                    name: "userId_credentialID",
                    fields: ["userId", "credentialID"]
                }, credentialID: {
                    name: "credentialID",
                    fields: ["credentialID"]
                },
            },
        },

    },
    deleteCascade: {
        user: ['Account', 'Session', 'Authenticator'],

    },
    authModel: 'User'

};
export default metadata;
